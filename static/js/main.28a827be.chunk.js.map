{"version":3,"sources":["components/profilecard.js","components/userinfo.js","components/userProfiler.js","components/GithubCredentials.js","components/GithubRepos.js","components/GithubUsers.js","App.js","reportWebVitals.js","index.js"],"names":["Profilecard","props","profile","name","avatar_url","bio","html_url","className","src","alt","href","target","rel","userInfo","followers","following","public_repos","email","location","UserProfiler","Object","keys","length","clientId","clientSecret","GithubRepos","reposs","repos","map","repo","stargazers_count","watchers_count","GithubUsers","useState","userName","setUserName","setProfile","setRepos","searchUserProfile","Axios","get","then","response","data","catch","err","console","log","searchUserRepos","onSubmit","e","preventDefault","size","type","value","onChange","placeholder","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAoBeA,MAlBf,SAAqBC,GAAQ,IAAD,EACcA,EAAMC,QAAzCC,EADqB,EACrBA,KAAKC,EADgB,EAChBA,WAAaC,EADG,EACHA,IAAKC,EADF,EACEA,SAC5B,OACE,cAAC,WAAD,UACA,sBAAKC,UAAU,OAAf,UACE,qBAAKC,IAAKJ,EAAYK,IAAI,GAAGF,UAAU,cACvC,sBAAKA,UAAU,YAAf,UACG,oBAAIA,UAAU,aAAd,SAA4BJ,IAC7B,4BAAIE,IACJ,mBAAGK,KAAMJ,EAAUK,OAAO,SAASC,IAAI,aAAaL,UAAU,yBAA9D,8BC0BOM,MAnCf,SAAkBZ,GAAQ,IAAD,EAC2DA,EAAMC,QAAlFY,EADiB,EACjBA,UAAWC,EADM,EACNA,UAAYC,EADN,EACMA,aAAcb,EADpB,EACoBA,KAAMc,EAD1B,EAC0BA,MAAOC,EADjC,EACiCA,SAAUb,EAD3C,EAC2CA,IAAIC,EAD/C,EAC+CA,SAEtE,OACC,eAAC,WAAD,WACE,sBAAKC,UAAU,uBAAf,UACE,uBAAMA,UAAU,wBAAhB,sBAAkDO,KAClD,uBAAMP,UAAU,wBAAhB,kBAA8CS,KAC9C,uBAAMT,UAAU,wBAAhB,sBAAmDQ,QAErD,qBAAKR,UAAU,YAAf,SACA,qBAAIA,UAAU,aAAd,UACE,qBAAIA,UAAU,kBAAd,uBACaJ,KAEb,oBAAII,UAAU,kBAAd,SACHF,IAEG,qBAAIE,UAAU,kBAAd,uBACSW,KAEX,qBAAIX,UAAU,kBAAd,oBACQU,KAGV,qBAAIV,UAAU,kBAAd,2BACgBD,cCDJa,MAvBf,SAAsBlB,GACpB,OACE,8BACA,qBAAKM,UAAU,YAAf,SACC,sBAAKA,UAAU,MAAf,UACG,qBAAKA,UAAU,WAAf,SAEgC,IAA9Ba,OAAOC,KAAKpB,GAAOqB,OACnB,cAAC,EAAD,CAAapB,QAASD,EAAMC,UAAa,OAG3C,qBAAKK,UAAU,WAAf,SAEgC,IAA9Ba,OAAOC,KAAKpB,GAAOqB,OACnB,cAAC,EAAD,CAAUpB,QAASD,EAAMC,UAAa,e,gBClBnCqB,EAAW,uBACXC,EAAe,4CCgCbC,MA/Bf,SAAqBxB,GAClB,IAAIyB,EAASzB,EAAM0B,MACpB,OACE,cAAC,WAAD,UACA,sBAAKpB,UAAU,OAAf,UACA,qBAAKA,UAAU,kCAAf,SACE,+CAEF,qBAAKA,UAAU,YAAf,SACC,oBAAIA,UAAU,aAAd,SAGKmB,EAAOE,KAAI,SAACC,GAEb,OACG,qBAAItB,UAAU,kBAAd,UACA,mBAAGG,KAAMmB,EAAKvB,SAAd,SAA0BuB,EAAK1B,OAC/B,uBAAMI,UAAU,wBAAhB,UAA0CsB,EAAKC,iBAA/C,WACA,uBAAMvB,UAAU,wBAAhB,UAAyCsB,EAAKE,eAA9C,6BCiFGC,MAhGf,WAAwB,IAAD,EACaC,mBAAS,IADtB,mBACbC,EADa,KACFC,EADE,OAEWF,mBAAS,MAFpB,mBAEb/B,EAFa,KAEHkC,EAFG,OAGOH,mBAAS,IAHhB,mBAGbN,EAHa,KAGLU,EAHK,KAiBbC,EAAoB,WACxBC,IAAMC,IAAN,uCAA0CN,EAA1C,qBAA+DX,EAA/D,yBAAwFC,IACvFiB,MAAK,SAACC,GACFN,EAAWM,EAASC,SACtBC,OAAM,SAACC,GACRC,QAAQC,IAAIF,OAIVG,EAAkB,WACtBT,IAAMC,IAAN,uCAA0CN,EAA1C,2BAAqEX,EAArE,yBAA8FC,IAC7FiB,MAAK,SAACC,GACFL,EAASK,EAASC,SACpBC,OAAM,SAACC,GACRC,QAAQC,IAAIF,OAKjB,OACC,eAAC,WAAD,WAEE,qBAAKtC,UAAU,iBAAf,SACG,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,OAAf,UACG,qBAAKA,UAAU,sCAAf,SACG,wEAEC,qBAAKA,UAAU,YAAf,SACA,uBAAMA,UAAU,cAAc0C,SAnC7B,SAACC,GAClBA,EAAEC,iBACFb,IACAU,KAgCgB,UACA,qBAAKzC,UAAU,aAAf,SACC,uBACA6C,KAAK,KACLC,KAAK,OACLC,MAAOpB,EACPqB,SAhDI,SAACL,GAErBf,EAAYe,EAAEvC,OAAO2C,QA+CL/C,UAAU,eACViD,YAAY,gBAEb,8BACA,uBAAOH,KAAK,SAASC,MAAM,SAAS/C,UAAU,4DAUhE,qBAAKA,UAAU,iBAAf,SACE,qBAAKA,UAAU,MAAf,SACC,qBAAKA,UAAU,MAAf,SAEGL,EAAU,cAAC,EAAD,CAAcA,QAASA,IAAY,WAMnD,qBAAKK,UAAU,iBAAf,SACC,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,MAAf,SAEDoB,EAAQ,cAAC,EAAD,CAAaA,MAAOA,IAAU,eCzE7B8B,MAVf,WACE,OACE,qBAAKlD,UAAU,MAAf,SAEE,cAAC,EAAD,OCISmD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.28a827be.chunk.js","sourcesContent":["import React, { Fragment } from 'react'\r\n\r\nfunction Profilecard(props) {\r\n   let{name,avatar_url , bio, html_url} = props.profile;\r\n  return (\r\n    <Fragment>\r\n    <div className=\"card\">\r\n      <img src={avatar_url} alt=\"\" className=\"img-fluid\" />\r\n      <div className=\"card-body\">\r\n         <h5 className=\"card-title\">{name}</h5>\r\n        <p>{bio}</p>\r\n        <a href={html_url} target=\"_blank\" rel=\"noreferrer\" className=\"btn btn-success btn-sm\">profile</a>\r\n      </div>\r\n\r\n    </div>\r\n    \r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Profilecard;\r\n","import React ,{Fragment} from 'react'\r\n\r\nfunction userInfo(props) {\r\n   let {followers, following , public_repos ,name, email, location ,bio,html_url} = props.profile\r\n\r\n  return (\r\n   <Fragment>\r\n     <div className=\"card-header bg-light\">\r\n       <span className=\"badge bg-primary mx-2\">Followers{followers}</span>\r\n       <span className=\"badge bg-success mx-2\">Repos{public_repos}</span>\r\n       <span className=\"badge bg-warning mx-2\">Following{ following}</span>\r\n     </div>\r\n     <div className=\"card-body\"> \r\n     <ul className=\"list-group\">\r\n       <li className=\"list-group-item\">\r\n         UserName: {name}\r\n       </li>   \r\n       <li className=\"list-group-item\">\r\n   {bio}\r\n </li> \r\n       <li className=\"list-group-item\">\r\n     Location: {location} \r\n     </li>    \r\n     <li className=\"list-group-item\">\r\n     Email :{email}\r\n   </li>    \r\n       \r\n   <li className=\"list-group-item\">\r\n    profile URL : {html_url}\r\n </li> \r\n </ul>\r\n  </div>\r\n   \r\n   </Fragment>\r\n  )\r\n}\r\n\r\nexport default userInfo\r\n","import React from 'react'\r\nimport ProfileCard from './profilecard'\r\nimport UserInfo from './userinfo';\r\n\r\nfunction UserProfiler(props) {\r\n  return (\r\n    <div>\r\n    <div className=\"container\">\r\n     <div className=\"row\">\r\n        <div className=\"col md-3\"> \r\n        {\r\n          Object.keys(props).length !== 0 ? \r\n          <ProfileCard profile={props.profile}/> : null\r\n         }   \r\n        </div>\r\n        <div className=\"col md-9\">\r\n        {\r\n          Object.keys(props).length !== 0 ? \r\n          <UserInfo profile={props.profile}/> : null\r\n         } \r\n        </div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserProfiler\r\n","export const clientId = \"36be4fe0e424d8eec3c9\" ;\r\nexport const clientSecret = \"15e651c02bb0db7106c4acde22386cd549418ee3 \";","import React, { Fragment } from 'react'\r\n\r\nfunction GithubRepos(props) {\r\n   let reposs = props.repos\r\n  return (\r\n    <Fragment>\r\n    <div className=\"card\">\r\n    <div className=\"card-header bg-light text-white\">\r\n      <h3>Github Repo</h3>\r\n    </div>\r\n    <div className=\"card-body\">\r\n     <ul className=\"list-group\">\r\n        {\r\n          \r\n          reposs.map((repo) => {\r\n\r\n         return(\r\n            <li className=\"list-group-item\">\r\n            <a href={repo.html_url} >{repo.name}</a>\r\n            <span className=\"badge bg-success mx-5\" >{repo.stargazers_count}Stars</span>\r\n            <span className=\"badge bg-warning mx-5\">{repo.watchers_count}watches</span>\r\n          </li>\r\n         )\r\n          })\r\n          \r\n      }\r\n     </ul>\r\n     </div>\r\n    </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default GithubRepos\r\n","import React, { Fragment,useState} from 'react'\r\nimport UserProfiler from \"./userProfiler\";\r\nimport Axios from \"axios\";\r\nimport {clientId,  clientSecret } from \"./GithubCredentials\";\r\nimport GithubRepos from \"./GithubRepos\"\r\nfunction GithubUsers() {\r\n    const[userName , setUserName] = useState(\"\");\r\n    const[profile , setProfile] = useState(null);\r\n    const[repos , setRepos] = useState([]);\r\n \r\n    const updateUserName = (e) => {\r\n     \r\n       setUserName(e.target.value);\r\n      \r\n\r\n    }\r\n\r\n    const searchUser = (e) =>{\r\n      e.preventDefault();\r\n      searchUserProfile();\r\n      searchUserRepos();\r\n    }\r\n    const searchUserProfile = () =>{\r\n      Axios.get(`https://api.github.com/users/${userName}?clientId=${clientId}&clientSecret=${clientSecret}`)\r\n      .then((response) => {\r\n           setProfile(response.data)\r\n      }).catch((err) => {\r\n        console.log(err);\r\n      })\r\n\r\n    }\r\n    const searchUserRepos = () =>{\r\n      Axios.get(`https://api.github.com/users/${userName}/repos?clientId=${clientId}&clientSecret=${clientSecret}`)\r\n      .then((response) => {\r\n           setRepos(response.data)\r\n      }).catch((err) => {\r\n        console.log(err);\r\n      })\r\n\r\n    }\r\n\r\n   return (\r\n    <Fragment>\r\n\r\n      <div className=\"container mt-4\">\r\n         <div className=\"row\">\r\n             <div className=\"col\">\r\n               <div className=\"card\">\r\n                  <div className=\"card-header bg-secondary text-white\">\r\n                     <h3>Let's find the Github Users profiles</h3>\r\n                  </div>\r\n                      <div className=\"card-body\">\r\n                      <form className=\"form-inline\" onSubmit={searchUser}>\r\n                      <div className=\"form-group\"> \r\n                       <input \r\n                       size=\"40\" \r\n                       type=\"text\" \r\n                       value={userName}\r\n                       onChange={updateUserName}\r\n                       className=\"form-control\"\r\n                       placeholder=\"user Name\" />\r\n                      </div>\r\n                      <div>\r\n                      <input type=\"submit\" value=\"search\" className=\"btn bg-secondary text-white btn-sm mt-2\"/>\r\n                      </div>\r\n                      </form>\r\n                 </div>\r\n\r\n              </div>\r\n            </div>\r\n        </div>\r\n    \r\n    </div>\r\n    <div className=\"container mt-3\">\r\n      <div className=\"row\">\r\n       <div className=\"col\">\r\n       {\r\n          profile ? <UserProfiler profile={profile}/> :null\r\n\r\n       }\r\n       </div>  \r\n    </div>\r\n    </div>\r\n    <div className=\"container mt-3\">\r\n     <div className=\"row\" >\r\n       <div className=\"col\">\r\n       {\r\n      repos ? <GithubRepos repos={repos}/> :null\r\n\r\n       }    \r\n\r\n     \r\n        </div>\r\n     \r\n     </div>\r\n    \r\n    </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default GithubUsers;\r\n","import React from 'react';\nimport './App.css';\nimport GithubUsers from './components/GithubUsers';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    \n      <GithubUsers/>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}